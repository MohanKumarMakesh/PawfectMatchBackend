name: Build and Deploy Django Project

on:
  push:
    branches:
      - main # Change this to your default branch if it's not 'main'

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12" # Specify the Python version you are using

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          touch .env
          echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DEBUG=${{ secrets.DJANGO_DEBUG }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env
          echo "CORS_ALLOW_ALL_ORIGINS=${{ secrets.DJANGO_CORS_ALLOW_ALL_ORIGINS }}" >> .env
          echo "DB_NAME=${{ secrets.DJANGO_DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DJANGO_DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DJANGO_DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DJANGO_DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DJANGO_DB_PORT }}" >> .env
          echo "FIREBASE_CREDENTIALS_PATH=${{ secrets.DJANGO_FIREBASE_CREDENTIALS_PATH }}" >> .env
          cat .env
          ls -la
      - name: Run tests
        run: |
          python manage.py test

      - name: Create ZIP file for deployment
        run: |
          zip -r deploy-package.zip . -x "*.git*"

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: deploy-package.zip

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12" # Specify the Python version you are using

      - name: Check for AWS CLI and install if not present
        run: |
          if ! command -v aws &> /dev/null
          then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi

      - name: Check for EB CLI and install if not present
        run: |
          if ! command -v eb &> /dev/null
          then
            pip install awsebcli
          fi

      - name: Deploy to Elastic Beanstalk
        run: |
          pwd
          eb init -p python-3.12 pawfectmatch --region us-east-1  # Change 'my-app' to your Elastic Beanstalk application name and region
          eb deploy --staged
